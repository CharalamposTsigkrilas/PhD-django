services:
  db:
    image: postgres
    container_name: faculty-db
    restart: unless-stopped
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  
  web:
    build: .
    # command: python manage.py runserver 0.0.0.0:8000
    command: "gunicorn --workers=2 --bind=0.0.0.0:8000 myfaculty.wsgi:application" 
    container_name: faculty-web
    restart: unless-stopped
    volumes:
      - ./code/myfaculty:/code
      - static:/code/static
          
    # ports:
    #   - "8000:8000"
    environment:
      - POSTGRES_NAME=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=faculty-db
      - AUTH_LDAP_BIND_DN=${AUTH_LDAP_BIND_DN}
      - AUTH_LDAP_BIND_PASSWORD=${AUTH_LDAP_BIND_PASSWORD}
      - AUTH_LDAP_SERVER_URI=${AUTH_LDAP_SERVER_URI}
      - STUD_IP=${STUD_IP}
      - STUD_USER=${STUD_USER}
      - STUD_PASSWORD=${STUD_PASSWORD}
      - STUD_DATABASE=${STUD_DATABASE}
    depends_on:
      - db

  nginx:
    image: nginx
    volumes:
      - static:/static
      - ./code/myfaculty/media:/media
      - ./nginx:/etc/nginx/conf.d
    restart: unless-stopped
    ports: 
      - "30082:30082"
    depends_on:
      - web
    container_name: faculty-nginx


volumes:
  static:
  media: